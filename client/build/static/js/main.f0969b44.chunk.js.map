{"version":3,"sources":["firebase/secret.ts","firebase/firestore.ts","components/FullScreen/FullScreen.tsx","components/Screenshots/SingleScreenshot.tsx","components/Screenshots/ScreenshotRow.tsx","components/Typography/CustomTypo.tsx","helpers/dataCreation.ts","components/Screenshots/Screenshots.tsx","components/Topbar/CustomTabs.tsx","components/Topbar/Topbar.tsx","components/WebsiteSelector/WebsiteSelector.tsx","components/WebsiteSelector/WebsiteSelecotGroping.tsx","components/DateSelector/DateSlider.tsx","components/DateSelector/DateSelector.tsx","components/DateSelector/DateGroup.tsx","firebase/storage.ts","helpers/stateHelpers.ts","helpers/mapFunctions.ts","components/Words/WordsFunctions.ts","components/Words/WordSlider.tsx","components/Words/Graph.tsx","components/Words/Words.tsx","components/Headings/SingleHeading.tsx","components/Headings/HeadingCell.tsx","components/Headings/HeadingsRow.tsx","components/Headings/Headings.tsx","components/Headings/HeadingsFunctions.ts","App.tsx","index.tsx"],"names":["firebaseConfig","apiKey","process","google_cloud","authDomain","projectId","storageBucket","initializeApp","db","getFirestore","getHeadingDailyData","a","res","getDocs","collection","forEach","doc","data","id","fetchStaticWebsiteDataMap","docRef","getDoc","docSnap","exists","createRowObjects","arr","toReturn","leftRow","centerRow","rightRow","undefined","entry","item","politicalOrientation","push","FullScreen","fullScreenImage","setFullScreenImage","className","onClick","e","src","alt","preventDefault","stopPropagation","SingleScreenshot","screenshot","ScreenshotRow","screenshots","Grid","sm","container","direction","justify","map","index","DateTypo","children","margin","classes","makeStyles","theme","createStyles","base","fontSize","bigMargin","useStyles","Typography","getNPreviousDates","n","passedDate","Date","copy","i","setDate","getDate","getPreviousDay","d","getNextDay","formatedYearFromDate","getMonth","getFullYear","formatedYearsFromDates","dates","date","dateToFormatedMonth","getAllDatesBetween","d1","d2","console","log","d1Time","getTime","d2Time","max","min","temp","checkIfSameDay","a1","b1","c1","a2","b2","c2","Screenshots","chosenScreenshots","chosenDates","useState","formatedDates","setFormatedDates","useEffect","alignItems","CustomTabs","location","useLocation","val","setVal","getValue","pathname","locationMap","locationString","a11yProps","Tabs","value","aria-label","Tab","label","component","NavLink","activeClassName","to","HideOnScroll","trigger","useScrollTrigger","Slide","appear","in","AppBar","Toolbar","variant","ScrollTop","root","position","bottom","spacing","right","disableHysteresis","threshold","Zoom","event","anchor","target","ownerDocument","document","getElementById","scrollIntoView","behavior","block","role","Fab","color","size","Topbar","button","display","marginTop","formControl","minWidth","formInpput","minHeight","WebsiteSelect","websiteSelectData","updateWebisteSSSelection","React","age","setAge","open","setOpen","xs","FormControl","Select","labelId","onClose","onOpen","onChange","name","MenuItem","WebsiteSelecotGroping","webisteJointData","webisteDataInRows","setWebisteDataInRows","politicsBasedOnRows","width","DateSlider","fringeDates","updateChosenDates","setValue","setDates","getDay","pop","shift","marks","getSevenPreviousDays","first","second","firstIndex","indexOf","secondIndex","Slider","newValue","onChangeCommitted","step","DateSelector","error","setError","handleGenerator","num","normalDate","toDate","handleClose","utils","MomentUtils","gutterBottom","disableToolbar","format","KeyboardButtonProps","maxDate","minDate","DateGroup","storage","getStorage","getImgSrcFromName","fileName","childRef","ref","trueURL","getDownloadURL","then","url","catch","getScreenshotURL","formatedDate","getMissingScreenshots","names","currentData","getChosenScreenshotsFromData","values","cretaeImagesSources","screenshotsByDate","missing","newData","merge","chosenScreenshotsFromData","combineWordMaps","result","basket","Object","entries","key","getMaxNValuesFromMap","m","sorted_students","sort","b","splice","getFormatedDataToGraph","totalData","selected","keys","word","tempObj","charAt","toUpperCase","slice","length","count","frequencyOfWords","passOnlyChosenData","fullHeadings","datesBetween","totalWordCount","total","totalDailySiteData","found","newMap","pageDailyFrequencyOfWords","newCount","pageDailyWordCount","totalCount","totalMaps","valuetext","DiscreteSlider","align","defaultValue","getAriaValueText","aria-labelledby","valueLabelDisplay","Graph","webisteJointDataMap","ResponsiveContainer","height","BarChart","top","left","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","Words","headingMap","selectedGraphData","setSelectedGraphData","fullGrapghData","setFullGrapghData","allNames","selectedGraphDataRaw","fullGraphDataRaw","selected2","SingleHeading","href","text","ListItem","Link","Skeleton","HeadingCell","headings","downloadedHeadingImages","image","link","HeadingsRow","headingsRow","setDowloadedHeadingImages","tempMap","trueUrl","downloadAndCacheImages","pog","Headings","columnHeadingData","setColumnHeadingData","siteData","getSelectedHeadings","row","App","namesOfWebiteesToDisplay","setNamesOfWebiteesToDisplay","setScreenshotsByDate","setChosenScreenshots","setWebisteJointData","setHeadingMap","setFringeDates","setChosenDates","setFellScreenAndResetPosition","classList","toggle","updateFringesBasedOnHeadigs","maxAndMin","now","maxStr","nextIteration","returnMaxAndMinDateFromKeys","totalWebisteMap","x","splitDataByRows","path","require","config","ReactDOM","render","CssBaseline"],"mappings":"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","file":"static/js/main.f0969b44.chunk.js","sourcesContent":["\r\nexport  const firebaseConfig = {\r\n  apiKey:process.env.google_cloud,\r\n  authDomain: \"newscomparer.firebaseapp.com\",\r\n  projectId: \"newscomparer\",\r\n  storageBucket: \"newscomparer.appspot.com\",\r\n};\r\n\r\n","import { getFirestore, collection, getDocs } from \"firebase/firestore\";\r\nimport {\r\n    WebsiteJointDataInRows,\r\n  WebsiteJointDataMap,\r\n  TotalWebsiteStaticDataMap,  \r\n  DailyHeadingsEntry,\r\n  HeadingsByDate,\r\n} from \"../interfaces\";\r\n// initial configuration\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { firebaseConfig } from \"./secret\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\n\r\ninitializeApp(firebaseConfig);\r\nconst db = getFirestore();\r\nfunction isDailyHEadings(object: any): object is DailyHeadingsEntry {\r\n  return 'totalDailyFrequencyOfWords' in object;\r\n}\r\n\r\nexport const getHeadingDailyData = async (): Promise<HeadingsByDate | null>  => {\r\n  const res :HeadingsByDate = {};\r\n  const querySnapshot = await getDocs(collection(db, \"Headings\"));\r\n  querySnapshot.forEach((doc) => {\r\n    const a = doc.data()\r\n    if(isDailyHEadings(a)){\r\n      res[doc.id] = a;\r\n    }\r\n  });\r\n  return res;\r\n};\r\n// fetches static wbesite data in form of an array\r\nexport const fetchStaticWebsiteDataMap =\r\n  async (): Promise<TotalWebsiteStaticDataMap | null>  => {\r\n    const docRef = doc(db, \"Websites\", \"StaticWebisteData\");\r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n      return docSnap.data();\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n//categorizes website data based on political orientation\r\nexport const createRowObjects = (\r\n  arr: WebsiteJointDataMap\r\n): WebsiteJointDataInRows => {\r\n  const toReturn: WebsiteJointDataInRows = {\r\n    leftRow: [],\r\n    centerRow: [],\r\n    rightRow: [],\r\n  };\r\n  if (arr !== undefined) {\r\n    for (let entry in arr) {\r\n      const item = arr[entry];\r\n      if (item!.politicalOrientation === \"left\") {\r\n        toReturn.leftRow.push(item);\r\n      } else if (item!.politicalOrientation === \"center\") {\r\n        toReturn.centerRow.push(item);\r\n      } else {\r\n        toReturn.rightRow.push(item);\r\n      }\r\n    }\r\n  }\r\n  return toReturn;\r\n};\r\n","const FullScreen = ({\r\n  fullScreenImage,\r\n  setFullScreenImage,\r\n}: {\r\n  fullScreenImage: string;\r\n  setFullScreenImage: (src: string) => void;\r\n}) => {\r\n  const close = (e: React.MouseEvent<HTMLElement>) => {\r\n    setFullScreenImage(\"\");\r\n  };\r\n  const imageClick = (e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n  return (\r\n    <div\r\n      className={`fullScreen ${fullScreenImage === \"\" ? \"hide\" : \"\"}`}\r\n      onClick={close}\r\n    >\r\n      <img\r\n        src={fullScreenImage}\r\n        alt=\"test\"\r\n        className=\"fullScreen--image fullScreen--image-off\"\r\n        id=\"fullScreenImage\"\r\n        onClick={imageClick}\r\n      />\r\n      {/* i doubt whether this is necessary */}\r\n      {/* <CloseIcon className=\"fullScreen--closeIcon\" /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullScreen;\r\n","const SingleScreenshot = ({\r\n  setFullScreenImage,\r\n  screenshot,\r\n}: {\r\n  setFullScreenImage: (src: string) => void;\r\n  screenshot: string;\r\n}) => {\r\n  return (\r\n    <div className=\"image-column--image-container\">\r\n      <img\r\n        src={screenshot}\r\n        className=\"image-column--image\"\r\n        onClick={() => setFullScreenImage(screenshot)}\r\n        alt=\"screens hot of webistie\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleScreenshot;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport SingleScreenshot from \"./SingleScreenshot\";\r\n\r\nconst ScreenshotRow = ({\r\n  setFullScreenImage,\r\n  screenshots,\r\n}: {\r\n  setFullScreenImage: (src: string) => void;\r\n  screenshots: string[];\r\n}) => {\r\n\r\n  return (\r\n    <Grid item sm container direction=\"row\" justify=\"flex-start\" >\r\n      {\r\n        screenshots.map((screenshot, index) => {\r\n            return (\r\n              <SingleScreenshot\r\n                key={index}\r\n                setFullScreenImage={setFullScreenImage}\r\n                screenshot={screenshot}\r\n              />\r\n            );\r\n          })\r\n        }\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ScreenshotRow;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nexport const DateTypo = ({children,margin=false}:{children: React.ReactNode,margin:boolean}) =>{\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    base:{\r\n      fontSize:\"2rem\",\r\n      margin:\"1.2rem\"\r\n    },\r\n    bigMargin:{\r\n      margin:\"2.5rem\"\r\n      \r\n    }\r\n  })\r\n);\r\nconst classes = useStyles();\r\n\r\n  return (\r\n    <Typography  className={`${classes.base} ${margin?classes.bigMargin:\"\"}`}> \r\n      {children}\r\n </Typography>\r\n  )\r\n}\r\n","import { AnyMap, FringeDates } from \"../interfaces\";\r\n// why so long? TODO\r\nexport const getNPreviousDates = (\r\n  n: number = 0,\r\n  passedDate: Date = new Date()\r\n) => {\r\n  // makes function pure\r\n  const copy = new Date(passedDate);\r\n  const res: Date[] = [new Date(copy)];\r\n  for (let i = 0; i < n; i++) {\r\n    copy.setDate(copy.getDate() - 1);\r\n    res.push(new Date(copy));\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const getPreviousDay = (d: Date) => {\r\n  const copy = new Date(d);\r\n  copy.setDate(copy.getDate() - 1);\r\n  return new Date(copy);\r\n};\r\n\r\nconst getNextDay = (d: Date) => {\r\n  const copy = new Date(d);\r\n  copy.setDate(copy.getDate() + 1);\r\n  return new Date(copy);\r\n};\r\n\r\nexport const createFileNames = (\r\n  name: string,\r\n  n: number,\r\n  passedDate: Date = new Date()\r\n) => {\r\n  const res: string[] = [];\r\n  const dates = getNPreviousDates(n, passedDate);\r\n  const dateStrings = formatedYearsFromDates(dates);\r\n  dateStrings.forEach((dateString) => {\r\n    res.push(`${dateString}-${name}.jpg`);\r\n  });\r\n  return res;\r\n};\r\n\r\nexport const formatedYearFromDate = (d: Date) => {\r\n  return `${d.getDate()}-${d.getMonth() +1}-${d.getFullYear()}`;\r\n};\r\n\r\nexport const formatedYearsFromDates = (dates: Date[]) => {\r\n  const arr: string[] = [];\r\n  dates.forEach((date) => {\r\n    arr.push(formatedYearFromDate(date));\r\n  });\r\n  return arr;\r\n};\r\n\r\n// human readable\r\nexport const dateToFormatedMonth = (d: Date) => {\r\n  return `${d.getDate()}-${d.getMonth() + 1}`;\r\n};\r\n\r\nexport const datesToFormatedMonths = (dates: Date[]) => {\r\n  const arr: string[] = [];\r\n  dates.forEach((date) => {\r\n    arr.push(dateToFormatedMonth(date));\r\n  });\r\n  return arr;\r\n};\r\n\r\nexport const returnMaxAndMinDateFromKeys = (\r\n  headings: AnyMap,\r\n  now: Date = new Date()\r\n): FringeDates => {\r\n  let max = now;\r\n  let min = now;\r\n  let maxStr = formatedYearFromDate(max);\r\n  const keys = Object.keys(headings);\r\n  if (keys.indexOf(maxStr) !== -1) {\r\n  } else {\r\n    max = getPreviousDay(max);\r\n  }\r\n  while (true) {\r\n    let nextIteration = formatedYearFromDate(getPreviousDay(min));\r\n    if (keys.indexOf(nextIteration) === -1) {\r\n      break;\r\n    }\r\n    min = getPreviousDay(min);\r\n  }\r\n  return {\r\n    max: max,\r\n    min: min,\r\n  };\r\n};\r\n\r\nexport const getAllDatesBetween = (\r\n  d1: Date | FringeDates,\r\n  d2: Date = new Date()\r\n): Date[] => {\r\n  console.log(d1);\r\n  // d1 is smaller\r\n  if (d1 instanceof Date) {\r\n\r\n    let d1Time = d1.getTime();\r\n    let d2Time = d2.getTime();\r\n    if (d1Time > d2Time) {\r\n      d2 = new Date(d1Time);\r\n      d1 = new Date(d2Time);\r\n    }\r\n  } else {\r\n    d2 = d1.max;\r\n    d1 = d1.min;\r\n  }\r\n\r\n  const res: Date[] = [];\r\n  let temp = new Date(d1);\r\n  while (!checkIfSameDay(temp, d2)) {\r\n    res.push(temp);\r\n    temp = getNextDay(temp);\r\n  }\r\n  res.push(temp);\r\n  return res;\r\n};\r\n\r\nexport const checkIfSameDay = (d1: Date, d2: Date) => {\r\n  const a1 = d1.getDate();\r\n  const b1 = d1.getMonth();\r\n  const c1 = d1.getFullYear();\r\n  const a2 = d2.getDate();\r\n  const b2 = d2.getMonth();\r\n  const c2 = d2.getFullYear();\r\n  if (a1 === a2 && b1 === b2 && c1 === c2) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n","import {useState,useEffect} from \"react\"\r\nimport { Grid } from \"@material-ui/core\";\r\nimport ScreenshotRow from \"./ScreenshotRow\"\r\nimport {DateTypo} from \"../Typography/CustomTypo\"\r\nimport { FringeDates } from \"../../interfaces\";\r\nimport {getAllDatesBetween,formatedYearsFromDates} from \"../../helpers/dataCreation\"\r\nconst Screenshots = ({\r\n  setFullScreenImage,\r\n  chosenScreenshots,\r\n  chosenDates\r\n}: {\r\n  setFullScreenImage: (src: string) => void;\r\n  chosenScreenshots: string[][];\r\n  chosenDates:FringeDates\r\n}) => {\r\n  const [formatedDates,setFormatedDates] = useState<string[]>([])\r\n  useEffect(()=>{\r\n    setFormatedDates(formatedYearsFromDates(getAllDatesBetween(chosenDates)));\r\n  },[chosenDates])\r\n  return (  \r\n    <Grid container direction=\"column-reverse\" justify=\"center\">\r\n       { chosenScreenshots[0].map((arr, index) => {\r\n          return (\r\n            <Grid item container justify=\"center\" alignItems=\"center\" direction=\"column\"  key={index} >  \r\n            <DateTypo margin={true} >{formatedDates[index]}</DateTypo>\r\n            <ScreenshotRow key={index}\r\n              setFullScreenImage={setFullScreenImage}\r\n              screenshots={[\r\n                chosenScreenshots[0][index],\r\n                chosenScreenshots[1][index],\r\n                chosenScreenshots[2][index]\r\n              ]}\r\n            />\r\n            </Grid>\r\n          );\r\n        })}\r\n    \r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Screenshots;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { WordMap } from \"../../interfaces\";\r\n\r\nconst CustomTabs = () => {\r\n  let location = useLocation();\r\n  const [val, setVal] = useState(0);\r\n  useEffect(() => {\r\n    setVal(getValue(location.pathname));\r\n  }, [location]);\r\n  const locationMap: WordMap = {\r\n    \"/words\": 0,\r\n    \"/headings\": 1,\r\n    \"/screenshots\": 2,\r\n  };\r\n  const getValue = (locationString: string) => {\r\n    const value = locationMap[locationString];\r\n    return value  ;\r\n  };\r\n  function a11yProps(index: any) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      \"aria-controls\": `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  return (\r\n    <div className=\"appbarr--left-container\">\r\n      <Tabs\r\n        value={val<=3?val:false}\r\n        aria-label=\"simple tabs example\"\r\n      >\r\n        <Tab\r\n          label=\"Word analysis\"\r\n          {...a11yProps(0)}\r\n          component={NavLink}\r\n          activeClassName=\"selected\"\r\n          to=\"/words\"\r\n        />\r\n\r\n        <Tab\r\n          label=\"Headings\"\r\n          {...a11yProps(1)}\r\n          component={NavLink}\r\n          activeClassName=\"selected\"\r\n          to=\"/headings\"\r\n        />\r\n\r\n      \r\n        <Tab\r\n          label=\"Screenshots\"\r\n          {...a11yProps(2)}\r\n          to=\"/screenshots\"\r\n          component={NavLink}\r\n          activeClassName=\"selected\"\r\n        />\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomTabs;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport CustomTabs from \"./CustomTabs\";\r\n\r\n\r\nfunction HideOnScroll() {\r\n  const trigger = useScrollTrigger();\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      <AppBar>\r\n        <Toolbar className=\"appbar--toolbar\">\r\n          <Typography variant=\"h6\">News-Comparer</Typography>\r\n          <CustomTabs/>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Slide>\r\n  );\r\n}\r\n\r\nfunction ScrollTop() {\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: \"fixed\",\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n\r\n  })\r\n);\r\n  const classes = useStyles();\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    const anchor = (\r\n      (event.target as HTMLDivElement).ownerDocument || document\r\n    ).getElementById(\"back-to-top-anchor\");\r\n    console.log(anchor);\r\n    if (anchor) {\r\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\r\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUpIcon />\r\n        </Fab>\r\n      </div>\r\n    </Zoom>\r\n  );\r\n}\r\n\r\n\r\nexport default function Topbar() {\r\n  return (\r\n    <>\r\n      <HideOnScroll />\r\n      <Toolbar id=\"back-to-top-anchor\" />\r\n      <ScrollTop />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { WebsiteStaticData } from \"../../interfaces\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      display: \"block\",\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 160,\r\n    },\r\n    formInpput: {\r\n      minHeight: 70,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function WebsiteSelect({\r\n  websiteSelectData,\r\n  index,\r\n  updateWebisteSSSelection,\r\n}: {\r\n  websiteSelectData: WebsiteStaticData[];\r\n  index: number;\r\n  updateWebisteSSSelection: (name: string, index: number) => Promise<void>;\r\n}) {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState<string | number>(0);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setAge(event.target.value as number);\r\n    const name = websiteSelectData[event.target.value as number].name;\r\n    updateWebisteSSSelection(name, index);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      xs \r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          open={open}\r\n          onClose={() => setOpen(false)}\r\n          onOpen={() => setOpen(true)}\r\n          value={age}\r\n          onChange={handleChange}\r\n          className={classes.formInpput}\r\n        >\r\n          {websiteSelectData.map((item, index) => {\r\n            return (\r\n              <MenuItem value={index} key={index}>\r\n                <img src={`${item.name}_Logo.png`} alt={item.name} />\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </Select>\r\n      </FormControl>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { createRowObjects } from \"../../firebase/firestore\";\r\nimport {\r\nWebsiteJointDataMap,WebsiteJointDataInRows\r\n} from \"../../interfaces\";\r\nimport WebsiteSelect from \"./WebsiteSelector\";\r\n\r\nconst WebsiteSelecotGroping = ({\r\n  updateWebisteSSSelection,\r\n  webisteJointData,\r\n}: {\r\n  updateWebisteSSSelection: (name: string, index: number) => Promise<void>\r\n  webisteJointData: WebsiteJointDataMap;\r\n}) => {\r\n  const [webisteDataInRows, setWebisteDataInRows] = useState<WebsiteJointDataInRows>({\r\n    leftRow: [],\r\n    centerRow: [],\r\n    rightRow: [],\r\n  });\r\n  useEffect(()=>{\r\n    const politicsBasedOnRows = createRowObjects(webisteJointData);\r\n    setWebisteDataInRows(politicsBasedOnRows)\r\n\r\n  },[webisteJointData])\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      spacing={3}\r\n    >\r\n      <WebsiteSelect websiteSelectData={webisteDataInRows.leftRow} index={0} updateWebisteSSSelection={updateWebisteSSSelection}/>\r\n      <WebsiteSelect websiteSelectData={webisteDataInRows.centerRow} index={1} updateWebisteSSSelection={updateWebisteSSSelection} />\r\n      <WebsiteSelect websiteSelectData={webisteDataInRows.rightRow} index={2} updateWebisteSSSelection={updateWebisteSSSelection} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default WebsiteSelecotGroping;\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {\r\n  dateToFormatedMonth,\r\n  getNPreviousDates,\r\n  checkIfSameDay,\r\n} from \"../../helpers/dataCreation\";\r\nimport { FringeDates } from \"../../interfaces\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 250,\r\n  },\r\n});\r\n\r\ninterface mark {\r\n  label: string;\r\n  value: number;\r\n}\r\ninterface pog {\r\n  marks: mark[];\r\n  dates: Date[];\r\n}\r\nexport default function DateSlider({\r\n  fringeDates,\r\n  updateChosenDates,\r\n  chosenDates,\r\n}: {\r\n  chosenDates: FringeDates;\r\n  fringeDates: FringeDates;\r\n  updateChosenDates: (obj: FringeDates) => void;\r\n}) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState<number[]>([0, 10]);\r\n\r\n  const getSevenPreviousDays = (): pog => {\r\n    const res = getNPreviousDates(7); \r\n    if (fringeDates?.max.getDay() === new Date().getDay()) {\r\n      res.pop();\r\n    } else {\r\n      res.shift();\r\n    }\r\n    const marks: mark[] = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      marks.push({\r\n        label: dateToFormatedMonth(res[i]),\r\n        value: i * 10,\r\n      });\r\n    }\r\n    return {\r\n      dates: res,\r\n      marks: marks,\r\n    };\r\n  };\r\n\r\n  const [dates, setDates] = React.useState<pog | null>(null);\r\n\r\n  useEffect(() => {\r\n    setDates(getSevenPreviousDays());\r\n  }, []);\r\n  useEffect(() => {\r\n    if (dates) {\r\n      const arr = dates.dates;\r\n      let num1 = 0;\r\n      let num2 = 0;\r\n      const first = arr.map((item) => {\r\n        return checkIfSameDay(item, chosenDates.max);\r\n      });\r\n      const second = arr.map((item) => {\r\n        return checkIfSameDay(item, chosenDates.min);\r\n      });\r\n      const firstIndex = first.indexOf(true);\r\n      const secondIndex = second.indexOf(true);\r\n\r\n      if (firstIndex === -1) {\r\n        num1 = 70;\r\n      } else {\r\n        num1 = firstIndex * 10;\r\n      }\r\n\r\n      if (secondIndex === -1) {\r\n        num2 = 70;\r\n      } else {\r\n        num2 = secondIndex * 10;\r\n      }\r\n\r\n      setValue([num1, num2]);\r\n    }\r\n  }, [chosenDates,dates]);\r\n\r\n  const handleChange = (event: any, newValue: number | number[]) => {\r\n    setValue(newValue as number[]);\r\n  };\r\n  const handleChangeEnd = (event: any, newValue: number | number[]) => {\r\n    setValue(newValue as number[]);\r\n    if (dates) {\r\n      updateChosenDates({\r\n        min: dates.dates[value[1] / 10],\r\n        max: dates.dates[value[0] / 10],\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {dates ? (\r\n          <Slider\r\n            value={value}\r\n            onChange={handleChange}\r\n            onChangeCommitted={handleChangeEnd}\r\n            marks={dates.marks}\r\n            max={60}\r\n            step={10}\r\n          />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import \"date-fns\";\r\nimport { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\r\n\r\nimport { FringeDates } from \"../../interfaces\";\r\n\r\nexport default function DateSelector({\r\n  chosenDates,\r\n  fringeDates,\r\n  updateChosenDates,\r\n}: {\r\n  chosenDates: FringeDates;\r\n  fringeDates: FringeDates;\r\n  updateChosenDates: (obj: FringeDates) => void;\r\n}) {\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  const handleGenerator = (num: number) => {\r\n    const handleDateChange = (date: MaterialUiPickersDate | null) => {\r\n      if (date !== null) {\r\n        const normalDate = date.toDate();\r\n        let res: FringeDates;\r\n        if (num === 0) {\r\n          res = {\r\n            min: normalDate,\r\n            max: chosenDates.max,\r\n          };\r\n        } else {\r\n          res = {\r\n            min: chosenDates.min,\r\n            max: normalDate,\r\n          };\r\n        }\r\n\r\n        if (res.min.getTime() > res.max.getTime()) {\r\n          // change classes\r\n          setError(\"The date on right should be before the one on the left\");\r\n        } else {\r\n          updateChosenDates(res);\r\n          setError(\"\");\r\n        }\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n    };\r\n    return handleDateChange;\r\n  };\r\n  const handleClose = () => {\r\n    setError(\"\");\r\n  };\r\n  return (\r\n    // TODO ERROR CLASS\r\n    <MuiPickersUtilsProvider utils={MomentUtils}>\r\n      <Typography gutterBottom>\r\n        Choose start date on the left, and the end date on the right\r\n      </Typography>\r\n      <Grid container justify=\"space-around\">\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"DD/MM/yyyy\"\r\n          margin=\"normal\"\r\n          label=\"Date picker inline\"\r\n          value={chosenDates ? chosenDates.max : new Date()}\r\n          onChange={handleGenerator(1)}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n          maxDate={fringeDates.max}\r\n          minDate={fringeDates.min}\r\n          onClose={handleClose}\r\n          className={error !== \"\" ? \"date-group--date-selector--error\" : \"\"}\r\n        />\r\n\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"DD/MM/yyyy\"\r\n          margin=\"normal\"\r\n          label=\"Date picker inline\"\r\n          value={chosenDates.min}\r\n          onChange={handleGenerator(0)}\r\n          KeyboardButtonProps={{\r\n            \"aria-label\": \"change date\",\r\n          }}\r\n          maxDate={fringeDates.max}\r\n          minDate={fringeDates.min}\r\n          onClose={handleClose}\r\n          className={error !== \"\" ? \"date-group--date-selector--error\" : \"\"}\r\n\r\n        />\r\n      </Grid>\r\n      <Typography gutterBottom> {error} </Typography>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import DateSlider from \"./DateSlider\"\r\nimport DateSelector from \"./DateSelector\"\r\nimport { FringeDates } from \"../../interfaces\"\r\n\r\nconst DateGroup = ({fringeDates,updateChosenDates,chosenDates}:{chosenDates:FringeDates | null,fringeDates :FringeDates | null,  updateChosenDates: (obj: FringeDates) => void}) => {\r\n  return (\r\n    <div className=\"date-group--container\">\r\n\r\n   {\r\n    (fringeDates && chosenDates)?(\r\n      <>\r\n     <DateSelector  fringeDates={fringeDates} updateChosenDates={updateChosenDates} chosenDates = {chosenDates}/>\r\n     <DateSlider  fringeDates={fringeDates} updateChosenDates={updateChosenDates} chosenDates = {chosenDates}/>\r\n   </>\r\n   )\r\n   :null\r\n   }\r\n   </div>\r\n\r\n  )\r\n}\r\n\r\nexport default DateGroup\r\n","import {\r\n  formatedYearsFromDates,\r\n} from \"../helpers/dataCreation\";\r\nimport { getStorage, ref, getDownloadURL } from \"firebase/storage\";\r\nimport { ScreenshotsByDate } from \"../interfaces\";\r\n\r\nconst storage = getStorage();\r\n\r\n// return src of image from firebase storage\r\nexport const getImgSrcFromName = async (fileName: string): Promise<string> => {\r\n  console.log(fileName)\r\n  const childRef = ref(storage, fileName)\r\n  const trueURL = getDownloadURL(childRef)\r\n    .then((url) => {\r\n      return url;\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"failed fetching\", error);\r\n      return \"\";\r\n      // Handle any errors\r\n    });\r\n  return trueURL;\r\n};\r\n\r\n\r\nconst getScreenshotURL = async (name: string, formatedDate: string) => {\r\n  const url = await getImgSrcFromName(`${name}-${formatedDate}.jpg`);\r\n  return url;\r\n};\r\nexport const getMissingScreenshots = async (\r\n  names: string[],\r\n  dates: Date[],\r\n  currentData: ScreenshotsByDate\r\n) => {\r\n  const toReturn: ScreenshotsByDate = {};\r\n  const formatedDates: string[] = formatedYearsFromDates(dates);\r\n    for(let formatedDate of formatedDates){\r\n    toReturn[formatedDate] = {};\r\n    for(let name of names){\r\n      if (\r\n        currentData[formatedDate] &&\r\n        currentData[formatedDate][name]\r\n      ) {\r\n        // already present so we dont do anything\r\n      } else {\r\n        toReturn[formatedDate][name] = await getScreenshotURL(\r\n          name,\r\n          formatedDate\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return toReturn;\r\n};\r\n","import { createRowObjects } from \"../firebase/firestore\";\r\nimport { getMissingScreenshots } from \"../firebase/storage\";\r\nimport {\r\n  TotalGraphData,\r\n  WebsiteJointDataMap,\r\n  HeadingsByDate,\r\n  FringeDates,\r\n  WordMap,\r\n  ScreenshotsByDate,\r\n  DailyWebsitesDataMap,\r\n} from \"../interfaces\";\r\nimport merge from \"deepmerge\";\r\nimport { formatedYearsFromDates, getAllDatesBetween } from \"./dataCreation\";\r\nimport { combineWordMaps } from \"./mapFunctions\";\r\n\r\n// TODO TESTS\r\nexport const getChosenScreenshotsFromData = (\r\n  data: ScreenshotsByDate,\r\n  names: string[],\r\n  dates: Date[]\r\n) => {\r\n  const res: string[][] = [[], [], []];\r\n  const formatedDates = formatedYearsFromDates(dates);\r\n  const values = names;\r\n  for (let date of formatedDates) {\r\n    res[0].push(data[date][values[0]]);\r\n    res[1].push(data[date][values[1]]);\r\n    res[2].push(data[date][values[2]]);\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const splitDataByRows = (webisteJointData: WebsiteJointDataMap) => {\r\n  const politicsBasedOnRows = createRowObjects(webisteJointData);\r\n  let temp = [\"\", \"\", \"\"];\r\n  if (politicsBasedOnRows.leftRow.length !== 0) {\r\n    temp = [\r\n      politicsBasedOnRows.leftRow[0].name,\r\n      politicsBasedOnRows.centerRow[0].name,\r\n      politicsBasedOnRows.rightRow[0].name,\r\n    ];\r\n  }\r\n  return temp;\r\n};\r\n\r\nexport const checkIfShouldRequest = (\r\n  names: string[],\r\n  dates: Date[],\r\n  screenshotsByDate: ScreenshotsByDate\r\n) => {\r\n  if (names[0] === \"\") {\r\n    return false;\r\n  }\r\n\r\n  const keys = Object.keys(screenshotsByDate);\r\n  const formatedDates = formatedYearsFromDates(dates);\r\n  // jesli nie ma tych ktorych suzkam to feczuje\r\n  for (let i = 0; i < formatedDates.length; i++) {\r\n    if (keys.indexOf(formatedDates[i]) === -1) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  for (let date of formatedDates) {\r\n    const dateKeys = Object.keys(screenshotsByDate[date]);\r\n    if (checkIfNamesAreMissing(dateKeys, names)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\nexport const checkIfNamesAreMissing = (keys: string[], names: string[]) => {\r\n  for (let name of names) {\r\n    if (keys.indexOf(name) === -1) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const cretaeImagesSources = async (\r\n  names: string[],\r\n  dates: Date[],\r\n  screenshotsByDate: ScreenshotsByDate\r\n) => {\r\n  const missing = await getMissingScreenshots(names, dates, screenshotsByDate);\r\n  // what if object should be smaller?\r\n  const newData = merge(screenshotsByDate, missing);\r\n  const chosenScreenshotsFromData = getChosenScreenshotsFromData(\r\n    newData,\r\n    names,\r\n    dates\r\n  );\r\n\r\n  return {\r\n    chosenScreenshotsFromData: chosenScreenshotsFromData,\r\n    newData: newData,\r\n  };\r\n};\r\n\r\n","import { WordMap } from \"../interfaces\";\r\nexport const combineWordMaps = (data: WordMap[]) => {\r\n  const result: WordMap = {}; \r\n  data.forEach((basket) => {\r\n    for (let [key, value] of Object.entries(basket)) {\r\n      if (result[key]) {\r\n        result[key] += value; \r\n      } else {\r\n        result[key] = value;\r\n      }\r\n    }\r\n  });\r\n  return result;\r\n};\r\nexport const sumOfMapValues = (maps: WordMap[]) => {\r\n  let number = 0;\r\n  for (let i = 0; i < maps.length; i++) {\r\n    const keys = Object.keys(maps[i]);\r\n    for (let index in keys) {\r\n      number += maps[i][keys[index]];\r\n    }\r\n  }\r\n  return number;\r\n};\r\nexport const getMaxNValuesFromMap = (map:WordMap,n:number, m:number=0) =>{\r\n  const entries = Object.entries(map)\r\n  var sorted_students = entries.sort(function(a, b) {\r\n    return b[1] - a[1];\r\n  });\r\n  return sorted_students.splice(m,n)\r\n\r\n}","import { getAllDatesBetween, formatedYearsFromDates } from \"../../helpers/dataCreation\"\r\nimport { combineWordMaps } from \"../../helpers/mapFunctions\"\r\nimport { TotalGraphData, AnyMap,FringeDates,HeadingsByDate, WordMap } from \"../../interfaces\"\r\n\r\n\r\nexport const getFormatedDataToGraph = (totalData:TotalGraphData,selected:[string, number][]) =>{\r\n  const keys = Object.keys(totalData)\r\n  const res:AnyMap[] = []\r\n  selected.forEach(entry=>{\r\n    const  word = entry[0]\r\n    const capitalizedWord = word.charAt(0).toUpperCase() + word.slice(1,word.length)\r\n    const tempObj:AnyMap = {\r\n      word : capitalizedWord\r\n    }\r\n    keys.forEach(key=>{\r\n      let count = 0\r\n      console.log(totalData[key], \"BUM\")\r\n      if(totalData[key].frequencyOfWords[word] !== undefined){\r\n              count = totalData[key].frequencyOfWords[word]\r\n      }\r\n      tempObj[key] = count\r\n    })\r\n    res.push({\r\n      ...tempObj\r\n    })\r\n  })\r\n  console.log(res,\"RES\")\r\n  return res\r\n}\r\n\r\nexport const passOnlyChosenData = (\r\n  names: string[],\r\n  fringeDates: FringeDates,\r\n  fullHeadings: HeadingsByDate\r\n) => {\r\n  const res: TotalGraphData = {};\r\n  const datesBetween = getAllDatesBetween(fringeDates);\r\n  // webistes and \"total\"\r\n  names.forEach((name) => {\r\n    res[name] = {\r\n      frequencyOfWords: {},\r\n      totalWordCount: 0,\r\n    };\r\n  });\r\n  res.total = {\r\n    frequencyOfWords: {},\r\n    totalWordCount: 0,\r\n  };\r\n\r\n  const formatedDates = formatedYearsFromDates(datesBetween);\r\n  // we get  word data only for dates in range\r\n  formatedDates.forEach((date) => {\r\n    const data = fullHeadings[date].totalDailySiteData;\r\n    names.forEach((name) => {\r\n      const found = data[name];\r\n      console.log(found);\r\n      const newMap = combineWordMaps([\r\n        found.pageDailyFrequencyOfWords,\r\n        res[name].frequencyOfWords,\r\n      ]);\r\n      const newCount = found.pageDailyWordCount + res[name].totalWordCount;\r\n      res[name] = {\r\n        frequencyOfWords: newMap,\r\n        totalWordCount: newCount,\r\n      };\r\n    });\r\n  });\r\n\r\n  let totalCount = 0;\r\n\r\n  let totalMaps: WordMap[] = [];\r\n\r\n  names.forEach((name) => {\r\n    totalCount += res[name].totalWordCount;\r\n    totalMaps.push(res[name].frequencyOfWords);\r\n  });\r\n\r\n  res.total = {\r\n    frequencyOfWords: combineWordMaps(totalMaps),\r\n    totalWordCount:\r\n     totalCount,\r\n  };\r\n\r\n  return res;\r\n};\r\n\r\n","import React, { ChangeEvent, Dispatch, SetStateAction } from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\n\r\nfunction valuetext(value: number) {\r\n  return `${value}°C`;\r\n}\r\n\r\nexport default function DiscreteSlider({\r\n    value,\r\n    setValue,\r\n  }: {\r\n    value: number;\r\n    setValue: Dispatch<SetStateAction<number>>;\r\n  }) {\r\n    const handleChange = (e:ChangeEvent<{}>,val:number|number[])=>{\r\n      if(typeof val ===\"number\"){\r\n        setValue(val)\r\n      }else{\r\n        console.error(\"it shouldnt print\")\r\n      }\r\n    }\r\n  return (\r\n    <div className=\"grid--slider\">\r\n      <Typography id=\"discrete-slider\" gutterBottom align=\"center\">\r\n        Select amount of words to show\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={1}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={1}\r\n        onChange={handleChange}\r\n        marks\r\n        min={1}\r\n        max={20}\r\n      />\r\n    </div>\r\n  );\r\n}","import {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { AnyMap,WebsiteJointDataMap } from \"../../interfaces\";\r\n\r\nconst Graph = ({data,names,webisteJointDataMap}:{data:AnyMap[],names:string[],webisteJointDataMap:WebsiteJointDataMap}) => {\r\n  return (\r\n    <ResponsiveContainer height={500}>\r\n        <BarChart\r\n          data={data}\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"word\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          {data.length > 0\r\n            ? names.map((name, index) => {\r\n                return (\r\n                  <Bar\r\n                    dataKey={name}\r\n                    fill={`#${webisteJointDataMap[name].color}`}\r\n                    key={index}\r\n                  />\r\n                );\r\n              })\r\n            : null}\r\n          <Bar dataKey=\"total\" fill=\"#38AE1A\" />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n  )\r\n}\r\n\r\nexport default Graph\r\n","import { useEffect, useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { getFormatedDataToGraph, passOnlyChosenData } from \"./WordsFunctions\";\r\nimport {\r\n  HeadingsByDate,\r\n  FringeDates,\r\n  AnyMap,\r\n  WebsiteJointDataMap,\r\n} from \"../../interfaces\";\r\nimport { getMaxNValuesFromMap } from \"../../helpers/mapFunctions\";\r\nimport WordSlider from \"./WordSlider\";\r\nimport Graph from \"./Graph\";\r\nconst Words = ({\r\n  names,\r\n  chosenDates,\r\n  headingMap,\r\n  webisteJointDataMap,\r\n}: {\r\n  names: string[];\r\n  chosenDates: FringeDates;\r\n  headingMap: HeadingsByDate;\r\n  webisteJointDataMap: WebsiteJointDataMap;\r\n}) => {\r\n  const [selectedGraphData, setSelectedGraphData] = useState<AnyMap[]>([]);\r\n  const [fullGrapghData, setFullGrapghData] = useState<AnyMap[]>([]);\r\n\r\n  const [value, setValue] = useState<number>(1);\r\n\r\n  useEffect(() => {\r\n    const allNames = Object.keys(webisteJointDataMap)\r\n    const selectedGraphDataRaw = passOnlyChosenData(names, chosenDates, headingMap);\r\n    const fullGraphDataRaw = passOnlyChosenData(allNames, chosenDates, headingMap);\r\n    const selected2 = getMaxNValuesFromMap(fullGraphDataRaw.total.frequencyOfWords, value);\r\n    const selected = getMaxNValuesFromMap(selectedGraphDataRaw.total.frequencyOfWords, value);\r\n    console.log(selected, \"selected\");\r\n    setSelectedGraphData(getFormatedDataToGraph(selectedGraphDataRaw, selected));\r\n    setFullGrapghData(getFormatedDataToGraph(fullGraphDataRaw, selected2))\r\n  }, [chosenDates, names, headingMap, value,webisteJointDataMap]);\r\n\r\n  return (\r\n    <Grid className=\"grid--container\">\r\n      <WordSlider value={value} setValue={setValue} />\r\n      <Graph data={selectedGraphData} names={names} webisteJointDataMap={webisteJointDataMap} />\r\n      <Graph data={fullGrapghData} names={Object.keys(webisteJointDataMap)} webisteJointDataMap={webisteJointDataMap} />\r\n    </Grid>\r\n  );\r\n};\r\nexport default Words;\r\n","import { ListItem, Link, Typography } from \"@material-ui/core/\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst SingleHeading = ({\r\n  src,\r\n  href,\r\n  text,\r\n}: {\r\n  src: string | undefined;\r\n  href: string;\r\n  text: string;\r\n}) => {\r\n  return (\r\n    <ListItem className=\"headings--list-item\" button>\r\n      <Link href={href}>\r\n        {src === undefined ? (\r\n          <Skeleton variant=\"rect\" height={200} />\r\n        ) : src === \"\" ? null : (\r\n          <img className=\"headings--image\" src={src} alt=\"a\" />\r\n        )}\r\n        <Typography variant=\"subtitle1\">{text}</Typography>\r\n      </Link>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default SingleHeading;\r\n","import { Heading, WordToWordMap } from \"../../interfaces\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport SingleHeading from \"./SingleHeading\";\r\n\r\n\r\nconst HeadingCell = ({\r\n  headings,\r\n  downloadedHeadingImages,\r\n}: {\r\n  headings: Heading[];\r\n  downloadedHeadingImages: WordToWordMap;\r\n}) => {\r\n\r\n\r\n  return (\r\n    <ul  className=\"headings--list\"\r\n    >\r\n      {headings.map((item,index)=>{\r\n        return (\r\n\r\n          <SingleHeading\r\n        key={index}\r\n        src={downloadedHeadingImages[headings[index].image]}\r\n        href={headings[index].link}\r\n        text={headings[index].text}\r\n      />\r\n\r\n        )\r\n      })}\r\n    </ul>\r\n\r\n  );\r\n\r\n};\r\n\r\nexport default HeadingCell;\r\n","import { Dispatch, SetStateAction, useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { HeadingRow } from \"./HeadingsFunctions\";\r\nimport HeadingCell from \"./HeadingCell\";\r\nimport { DateTypo } from \"../Typography/CustomTypo\";\r\nimport { WordToWordMap } from \"../../interfaces\";\r\nimport { getImgSrcFromName } from \"../../firebase/storage\";\r\nconst HeadingsRow = ({\r\n  headingsRow,\r\n  names,\r\n  downloadedHeadingImages,\r\n  setDowloadedHeadingImages,\r\n}: {\r\n  headingsRow: HeadingRow;\r\n  names: string[];\r\n  downloadedHeadingImages: WordToWordMap;\r\n  setDowloadedHeadingImages: Dispatch<SetStateAction<WordToWordMap>>;\r\n}) => {\r\n  useEffect(() => {\r\n    const downloadAndCacheImages = async () => {\r\n      const tempMap: WordToWordMap = {};\r\n\r\n      for (let i in names) {\r\n        const headings = headingsRow[names[i]];\r\n        if (typeof headings === \"string\") {\r\n          continue;\r\n        }\r\n        for (let i in headings) {\r\n          let src = headings[i].image;\r\n          if (downloadedHeadingImages[src] === undefined ) {\r\n            if(src === \"\"){\r\n              // or placeholder, idk\r\n              tempMap[src] = \"\";\r\n            }else{\r\n              const trueUrl = await getImgSrcFromName(src);\r\n              tempMap[src] = trueUrl;\r\n              console.log(\"fetch\");\r\n            }\r\n           \r\n            \r\n          }\r\n        }\r\n        setDowloadedHeadingImages({ ...downloadedHeadingImages, ...tempMap });\r\n      }\r\n    };\r\n\r\n    downloadAndCacheImages();\r\n  }, [headingsRow, setDowloadedHeadingImages, names]);\r\n  // add placeholders\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <DateTypo margin={true}>{headingsRow.date}</DateTypo>\r\n      <Grid justify=\"center\" container item spacing={2}>\r\n        {names.map((name, index) => {\r\n          const pog = headingsRow[name];\r\n          return typeof pog !== \"string\" && typeof pog !== \"undefined\" ? (\r\n            <Grid item xs={4} key={index} container justify=\"center\">\r\n              <HeadingCell\r\n                headings={pog}\r\n                key={index}\r\n                downloadedHeadingImages={downloadedHeadingImages}\r\n              />\r\n            </Grid>\r\n          ) : null;\r\n        })}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default HeadingsRow;\r\n","import React, { useEffect,useState,Dispatch,SetStateAction } from \"react\";\r\nimport { HeadingsByDate, FringeDates, WordToWordMap} from \"../../interfaces\";\r\nimport HeadingsRow from \"./HeadingsRow\"\r\nimport {HeadingRow, getSelectedHeadings } from \"./HeadingsFunctions\";\r\nconst Headings = ({\r\n  names,\r\n  chosenDates,\r\n  headingMap,\r\n  downloadedHeadingImages,\r\n  setDowloadedHeadingImages\r\n}: {\r\n  names: string[];\r\n  chosenDates: FringeDates;\r\n  headingMap: HeadingsByDate;\r\n  downloadedHeadingImages:WordToWordMap;\r\n  setDowloadedHeadingImages:Dispatch<SetStateAction<WordToWordMap>>;\r\n}) => {\r\n  const [columnHeadingData,setColumnHeadingData] = useState<HeadingRow[]>([])\r\n  useEffect(() => {\r\n    const res = getSelectedHeadings(names, chosenDates, headingMap);\r\n    console.log(res, \"headins\");\r\n    setColumnHeadingData(res)\r\n  }, [names, chosenDates, headingMap]);\r\n\r\n  return <div className=\"reverse\">\r\n    {columnHeadingData.map((row,index)=>{\r\n      return <HeadingsRow headingsRow={row} key={index}  names={names}  downloadedHeadingImages={downloadedHeadingImages}\r\n      setDowloadedHeadingImages={setDowloadedHeadingImages}/>\r\n    })}\r\n  </div>;\r\n};\r\n\r\nexport default Headings;\r\n","import {\r\n  formatedYearsFromDates,\r\n  getAllDatesBetween,\r\n} from \"../../helpers/dataCreation\";\r\nimport { FringeDates, HeadingsByDate, Heading } from \"../../interfaces\";\r\nexport interface HeadingRow {\r\n  [name: string]:  string |Heading[];\r\n  date: string;\r\n}\r\n\r\nexport const getSelectedHeadings = (\r\n  names: string[],\r\n  dates: FringeDates,\r\n  totalData: HeadingsByDate\r\n) => {\r\n  const res: HeadingRow[] = [];\r\n  const formatedDates = formatedYearsFromDates(getAllDatesBetween(dates));\r\n  console.log(formatedDates, \"dates\");\r\n  formatedDates.forEach((date) => {\r\n    let tempObj: HeadingRow = { date };\r\n    if (totalData[date]) {\r\n      const siteData = totalData[date].totalDailySiteData;\r\n\r\n      // not optimal\r\n      console.log(siteData, \"XD\");\r\n      for (let index in names) {\r\n        const name = names[index]\r\n        console.log(name,siteData,\"PRZED\")\r\n        const data = siteData[name];\r\n        tempObj[name] = data.headings;\r\n      }\r\n      \r\n      res.push({ ...tempObj });\r\n    }\r\n  });\r\n  console.log(res,\"kkoniec\")\r\n  return res;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport {\r\n  WebsiteJointDataMap,\r\n  FringeDates,\r\n  HeadingsByDate,\r\n  ScreenshotsByDate,\r\n  WordToWordMap,\r\n} from \"./interfaces\";\r\nimport {\r\n  fetchStaticWebsiteDataMap,\r\n  getHeadingDailyData,\r\n} from \"./firebase/firestore\";\r\nimport FullScreen from \"./components/FullScreen/FullScreen\";\r\nimport Screenshots from \"./components/Screenshots/Screenshots\";\r\nimport Topbar from \"./components/Topbar/Topbar\";\r\nimport WebsiteSelecotGroping from \"./components/WebsiteSelector/WebsiteSelecotGroping\";\r\nimport DateGroup from \"./components/DateSelector/DateGroup\";\r\nimport {\r\n  returnMaxAndMinDateFromKeys,\r\n  getAllDatesBetween,\r\n} from \"./helpers/dataCreation\";\r\nimport { splitDataByRows, cretaeImagesSources } from \"./helpers/stateHelpers\";\r\nimport Words from \"./components/Words/Words\";\r\nimport Headings from \"./components/Headings/Headings\";\r\n\r\nfunction App() {\r\n  // STATES\r\n  const [fullScreenImage, setFullScreenImage] = useState(\"\");\r\n  const [namesOfWebiteesToDisplay, setNamesOfWebiteesToDisplay] = useState<\r\n    string[]\r\n  >([\"\", \"\", \"\"]);\r\n  const [screenshotsByDate, setScreenshotsByDate] = useState<ScreenshotsByDate>(\r\n    {}\r\n  );\r\n  const [chosenScreenshots, setChosenScreenshots] = useState<string[][]>([]);\r\n  const [webisteJointData, setWebisteJointData] = useState<WebsiteJointDataMap>(\r\n    {}\r\n  );\r\n  const [headingMap, setHeadingMap] = useState<HeadingsByDate>({});\r\n  // fringe - based on databse, chosen - based on user input\r\n  const [fringeDates, setFringeDates] = useState<FringeDates | null>(null);\r\n  const [chosenDates, setChosenDates] = useState<FringeDates | null>(null);\r\n    // used to prevent needles fetching of iamges in Headings\r\nconst [downloadedHeadingImages,setDowloadedHeadingImages] = useState<WordToWordMap>({})\r\n  // FUNCTIONS\r\n  const updateWebisteSSSelection = async (name: string, index: number) => {\r\n    const temp = [...namesOfWebiteesToDisplay];\r\n    temp[index] = name;\r\n\r\n    setNamesOfWebiteesToDisplay(temp);\r\n  };\r\n\r\n  const setFellScreenAndResetPosition = (src: string) => {\r\n    const fullScreenImage = document.getElementById(\"fullScreenImage\");\r\n    fullScreenImage?.classList.toggle(\"fullScreen--image-off\");\r\n    setFullScreenImage(src);\r\n  };\r\n\r\n  // EFFECTS //\r\n  // fetches static data and inital date constraints\r\n  useEffect(() => {\r\n    const updateFringesBasedOnHeadigs = (headings: HeadingsByDate) => {\r\n      const maxAndMin = returnMaxAndMinDateFromKeys(headings);\r\n      setFringeDates(maxAndMin);\r\n      setChosenDates({\r\n        max: maxAndMin.max,\r\n        min: maxAndMin.max,\r\n      });\r\n    };\r\n\r\n    const x = async () => {\r\n      const headings = await getHeadingDailyData();\r\n      const totalWebisteMap = await fetchStaticWebsiteDataMap();\r\n      if (headings !== null && totalWebisteMap !== null) {\r\n        setWebisteJointData(totalWebisteMap);\r\n        updateFringesBasedOnHeadigs(headings);\r\n        setHeadingMap(headings);\r\n        console.log(1111,\"update\",headings)\r\n      }\r\n    };\r\n    x();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setNamesOfWebiteesToDisplay(splitDataByRows(webisteJointData));\r\n\r\n  }, [webisteJointData]);\r\n\r\n  // reacts to change of selected dates\r\n\r\n  useEffect(() => {\r\n    const a = async () => {\r\n      if (chosenDates) {\r\n        const dates = getAllDatesBetween(chosenDates);\r\n        const newData = await cretaeImagesSources(\r\n          namesOfWebiteesToDisplay,\r\n          dates,\r\n          screenshotsByDate\r\n        );\r\n        setChosenScreenshots(newData.chosenScreenshotsFromData);\r\n        setScreenshotsByDate(newData.newData);\r\n      }\r\n    };\r\n\r\n    a();\r\n    // inclusion of all of them creates infinite loop\r\n  }, [namesOfWebiteesToDisplay, chosenDates]);\r\n  return (\r\n    // TODO\r\n    // add single page view, both for small screens and for on toggle\r\n    <>\r\n      <FullScreen\r\n        setFullScreenImage={setFellScreenAndResetPosition}\r\n        fullScreenImage={fullScreenImage}\r\n      />\r\n      <Topbar />\r\n      <WebsiteSelecotGroping\r\n        webisteJointData={webisteJointData}\r\n        updateWebisteSSSelection={updateWebisteSSSelection}\r\n      />\r\n      <DateGroup\r\n        fringeDates={fringeDates}\r\n        updateChosenDates={setChosenDates}\r\n        chosenDates={chosenDates}\r\n      />\r\n\r\n      <Switch>\r\n        <Route path=\"/words\">\r\n          {chosenDates !== null && Object.keys(headingMap).length > 0 ? (\r\n            <Words\r\n              names={namesOfWebiteesToDisplay}\r\n              chosenDates={chosenDates}\r\n              headingMap={headingMap}\r\n              webisteJointDataMap={webisteJointData}\r\n            />\r\n          ) : null}\r\n        </Route>\r\n        <Route path=\"/headings\">\r\n          {chosenDates !== null && Object.keys(headingMap).length > 0 ? (\r\n            <Headings\r\n              names={namesOfWebiteesToDisplay}\r\n              chosenDates={chosenDates}\r\n              headingMap={headingMap}\r\n              downloadedHeadingImages={downloadedHeadingImages}\r\n              setDowloadedHeadingImages={setDowloadedHeadingImages}\r\n            />\r\n          ) : null}\r\n        </Route>\r\n        <Route path=\"/screenshots\">\r\n          {chosenDates !== null && chosenScreenshots.length > 0 ? (\r\n            <Screenshots\r\n              setFullScreenImage={setFellScreenAndResetPosition}\r\n              chosenScreenshots={chosenScreenshots}\r\n              chosenDates={chosenDates}\r\n            />\r\n          ) : null}\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nrequire('dotenv').config()\n\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n    <Router>\n    <App />\n    </Router>\n\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}